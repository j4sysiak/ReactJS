plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'java'
//		id "com.moowork.node" version "1.3.1"  --->  To gówno, nie używaj
    id "com.github.node-gradle.node" version "3.5.0"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

node {
    // Version of node to use.
    version = '16.18.0'
    npmVersion = "8.19.2"

    // Base URL for fetching node distributions (change if you have a mirror).
    //distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.projectDir}/src/main/myreactapp/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.projectDir}/src/main/myreactapp/npm")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}/src/main/myreactapp")
}

processResources{
    dependsOn 'copyFrontendToBuild'
}

task copyFrontendToBuild(type: Copy) {
    dependsOn 'npmBuild'
    from "$projectDir/src/main/myreactapp/build/"
//    include "*"
    into "$buildDir/resources/main/static"
}

task npmBuild(type: NpmTask) {
    dependsOn 'npmInstallDependencies'
    execOverrides {
//        it.ignoreExitValue = true
        it.workingDir = 'src/main/myreactapp'
    }
    args = ['run', 'build']
}

task npmInstallDependencies(type: NpmTask) {
    dependsOn 'npmSetup'
    execOverrides {
        it.ignoreExitValue = true
        it.workingDir = 'src/main/myreactapp'
    }
    args = ['install']
}

task npmShowVersion(type: NpmTask) {
    execOverrides {
        it.ignoreExitValue = true
        it.workingDir = 'src/main/myreactapp'
    }
    args = ['--version']
}




dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
